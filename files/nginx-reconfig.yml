---
 - hosts: all
   become: true
   vars:
      site_name: "{{ lookup('env','SITE_NAME') | default('nginx.local',true) }}"
      nginx_ssl_dir: "{{ lookup('env','SSL_DIR') | default('/etc/nginx/ssl',true) }}"
   
   tasks:
    # Set stats to check for the existance of the default web dir and conf file
    - name: stat web directory
      stat: path=/var/www/html/nginx.local
      register: webdir_stat

    - name: stat nginx configuration
      stat: path=/etc/nginx/conf.d/nginx.local.conf
      register: siteconfig_stat

    - name: stat nginx certificate
      stat: path={{nginx_ssl_dir}}/{{site_name}}.crt
      register: sitecert_stat

    # Rename the web directory if the default exists
    - name: reconfiguring web directory
      command: mv /var/www/html/nginx.local /var/www/html/{{site_name}}
      when: webdir_stat.stat.exists and site_name != "nginx.local"

    # Reconfigure the site config file if the default already exists
    - name: reconfiguring site
      replace: dest=/etc/nginx/conf.d/nginx.local.conf regexp='nginx.local' replace='{{site_name}}' owner=nginx group=nginx mode=644
      when: siteconfig_stat.stat.exists and site_name != "nginx.local"
      notify: restart nginx
    
    # Rename the nginx config file if the default already exists
    - name: reconfiguring nginx
      command: mv /etc/nginx/conf.d/nginx.local.conf /etc/nginx/conf.d/{{site_name}}.conf
      when: siteconfig_stat.stat.exists and site_name != "nginx.local"
      notify: restart nginx

    # Generate a self signed certificate for the web service
    - name: ensuring openssl is present
      package: name={{item}} state=installed
      with_items:
        - openssl

    - name: creating nginx ssl directory
      file: path={{nginx_ssl_dir}} state=directory owner=nginx group=nginx mode=0775 recurse=yes

    - name: generate self signed certificate
      command: openssl req -new -nodes -x509 -subj "/C=US/ST=US/L=US/O=\'{{site_name}}\'/OU=Self Signed/CN=\'{{site_name}}\'" -days 3650 -keyout {{nginx_ssl_dir}}/{{site_name}}.key -out {{nginx_ssl_dir}}/{{site_name}}.crt -extensions v3_ca creates={{nginx_ssl_dir}}/{{site_name}}.crt
      when: sitecert_stat.stat.exists == False
      notify: restart nginx

    # Patch the nginx config file to enable SSL
    - name: enabling ssl
      replace: 
        dest: /etc/nginx/conf.d/{{site_name}}.conf
        regexp: '{{ item.regexp }}'
        replace: '{{ item.replace }}'
        owner: nginx
        group: nginx
        mode: 644
      with_items:
        - { regexp: '#listen', replace: 'listen' }
        - { regexp: '#ssl_certificate_key', replace: 'ssl_certificate_key' }
        - { regexp: '#ssl_certificate', replace: 'ssl_certificate' }
        - { regexp: '#ssl', replace: 'ssl' }
      notify: restart nginx

   handlers:
    - name: restart nginx
      service: name=nginx state=restarted


